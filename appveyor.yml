version: 2.6.{build}
branches:
  except:
  - gh-pages
configuration: Release
image: Visual Studio 2017
# platform: Any CPU
clone_folder: C:\projects\dotnet-standard-sdk
environment:
  COVERALLS_REPO_TOKEN:
    secure: Dnsrk2n+VNE4swcbTLXpfnHwUwTWT8TqMiMkthU6mq/ohNq9dA2rrSA6kdLDBKME
  GH_TOKEN:
    secure: J0LjUlYl+lGJMLBcOgVF1m1I07nyr+8yFOMaNBA23RGLMJKvYnRlhmGWXp07ejgu
  CRED_SECRET:
    secure: eEcA/09B7XzeTSb3GlaeqcWfQ/TemXxAq9/0AFM5+z8=
  GITHUB_TOKEN:
    secure: 8sr9qy9Ghr7IaCVsf0mvKITy6nb5RZaEScQ3VIPNMJxPzFCkZ688RHIOmW5qWWy5
install:
# Get the latest stable version of Node.js or io.js
- ps: Install-Product node $env:nodejs_version
# install modules
- npm install
- pip install --user bumpversion
- npm install @semantic-release/exec
- cmd: >-
    rm -rf packages

    mkdir packages

    nuget restore

    nuget install -Verbosity quiet -OutputDirectory packages -Version 4.6.519 OpenCover

    nuget install -Verbosity quiet -OutputDirectory packages -Version 2.4.5.0 ReportGenerator

    nuget install -Verbosity quiet -OutputDirectory packages -Version 0.7.0 coveralls.net

    nuget install -Verbosity quiet -OutputDirectory packages -Version 1.8.14 Doxygen

    nuget install -Verbosity quiet -OutputDirectory packages secure-file -ExcludeVersion

before_build:
- ps: >-
    if($env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null)
    {
      git clone https://$env:GITHUB_TOKEN@github.ibm.com/germanatt/sdk-credentials.git C:\projects\sdk-credentials
    }

    dotnet restore

build:
  project: IBM.WatsonDeveloperCloud.sln
  verbosity: minimal
after_build:
- ps: >-
    git config --global user.email "wps@us.ibm.com"
    git config --global user.name "Watson Github Bot"

    if(!$env:APPVEYOR_REPO_TAG_NAME)

    {
        $branchName = $env:APPVEYOR_REPO_BRANCH
    }

    else

    {
        $branchName = $env:APPVEYOR_REPO_TAG_NAME
    }

    Write-Output "branchName  is " + $branchName

    if($env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null)
    {
      
      If($branchName -eq "development" -or $branchName -eq $env:APPVEYOR_REPO_TAG_NAME -or $branchName -eq "master")

      {
          .\packages\Doxygen.1.8.14\tools\doxygen.exe Doxyfile

          git clone --quiet --branch=gh-pages https://$env:GH_TOKEN@github.com/watson-developer-cloud/dotnet-standard-sdk.git gh-pages

          If(Test-Path -Path gh-pages\docs\$branchName)
          {
            rm gh-pages\docs\$branchName -r -force
          }
          mkdir -p gh-pages\docs\$branchName
          mv .\docs\html gh-pages\docs\$branchName
          . .\.utility\generate_html.ps1
          New-TableOfContents ".\gh-pages\docs" | Out-File ".\gh-pages\index.html" -encoding utf8
          cd gh-pages
          git add -f .
          git commit -m "Updated documentation for $branchName"
          git push -f origin gh-pages
          cd ../

          If($branchName -eq "master")

          {
            Write-Output "branchName  is master - building nuget packages"
            dotnet pack .\src\IBM.WatsonDeveloperCloud\IBM.WatsonDeveloperCloud.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.Assistant.v1\IBM.WatsonDeveloperCloud.Assistant.v1.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.Conversation.v1\IBM.WatsonDeveloperCloud.Conversation.v1.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.Discovery.v1\IBM.WatsonDeveloperCloud.Discovery.v1.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.LanguageTranslator.v2\IBM.WatsonDeveloperCloud.LanguageTranslator.v2.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.LanguageTranslator.v3\IBM.WatsonDeveloperCloud.LanguageTranslator.v3.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.NaturalLanguageClassifier.v1\IBM.WatsonDeveloperCloud.NaturalLanguageClassifier.v1.csproj --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1\IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1 --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.PersonalityInsights.v3\IBM.WatsonDeveloperCloud.PersonalityInsights.v3 --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.SpeechToText.v1\IBM.WatsonDeveloperCloud.SpeechToText.v1 --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.TextToSpeech.v1\IBM.WatsonDeveloperCloud.TextToSpeech.v1 --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.ToneAnalyzer.v3\IBM.WatsonDeveloperCloud.ToneAnalyzer.v3 --configuration Release
            dotnet pack .\src\IBM.WatsonDeveloperCloud.VisualRecognition.v3\IBM.WatsonDeveloperCloud.VisualRecognition.v3 --configuration Release
          }
          
          else

          {
            Write-Output "branchName is not master - do not pack."
          }

      }

      else

      {
          Write-Output "branchName is $branchName. Not generating documentation."
      }
    }

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.VisualRecognition.v3.IntegrationTests\VisualRecognitionTestData C:\projects\dotnet-standard-sdk\VisualRecognitionTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.SpeechToText.v1.IntegrationTests\SpeechToTextTestData C:\projects\dotnet-standard-sdk\SpeechToTextTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.Discovery.v1.IntegrationTests\DiscoveryTestData C:\projects\dotnet-standard-sdk\DiscoveryTestData

    Copy-Item C:\projects\dotnet-standard-sdk\test\IBM.WatsonDeveloperCloud.LanguageTranslator.v2.IntegrationTests\glossary.tmx C:\projects\dotnet-standard-sdk\glossary.tmx
test_script:
- ps: >-
      if(Test-Path -Path coverage)
      {
          rm coverage -r -force
      }

      New-Item -path . -name coverage -itemtype directory
      
      ForEach ($folder in (Get-ChildItem -Path C:\\projects\\dotnet-standard-sdk\\test -Directory)) 
      { 
          if($env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null)
          {
              Write-Output \"No pull request number. Executing tests\"
              dotnet test $folder.FullName
              if($LastExitCode -ne 0) 
              {
                  $host.SetShouldExit($LastExitCode )
              }
              echo \"Test passed: $?\"
              echo \"LastExitCode: $LastExitCode\"
              $openCover = 'C:\\projects\\dotnet-standard-sdk\\packages\\OpenCover.4.6.519\\tools\\OpenCover.Console.exe'    
              $targetArgs = '-targetargs: test ' + $folder.FullName + ' -c Release -f netcoreapp1.0'
              $filter = '-filter:+[IBM.WatsonDeveloperCloud*]*-[*Tests*]*-[*Example*]*'
              & $openCover '-target:C:\\Program Files\\dotnet\\dotnet.exe' $targetArgs '-register:user' $filter '-oldStyle' '-mergeoutput' '-hideskipped:File' '-searchdirs:$testdir\\bin\\release\\netcoreapp1.0' '-output:coverage\\coverage.xml'

              C:\\projects\\dotnet-standard-sdk\\packages\\ReportGenerator.2.4.5.0\\tools\\ReportGenerator.exe -reports:coverage\\coverage.xml -targetdir:coverage -verbosity:Error

              if($env:COVERALLS_REPO_TOKEN)
              {
                  C:\\projects\\dotnet-standard-sdk\\packages\\coveralls.net.0.7.0\\tools\\csmacnz.Coveralls.exe --opencover -i coverage\\coverage.xml --useRelativePaths
              }
              else
              {
                  Write-Output \"There is no Coveralls Repo Token - not pushing coverage.\"
              }
          }
          else
          {
              Write-Output \"Pull request number is $env:APPVEYOR_PULL_REQUEST_NUMBER. Skipping integration tests.\"

              if($folder.FullName.EndsWith("UnitTests"))
              {
                  dotnet test $folder.FullName
                  if($LastExitCode -ne 0) 
                  {
                      $host.SetShouldExit($LastExitCode )
                  }
                  echo \"Test passed: $?\"
                  echo \"LastExitCode: $LastExitCode\"
              }
          }
      }                                                                 
artifacts:
- path: '\src\IBM.WatsonDeveloperCloud\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud
- path: '\src\IBM.WatsonDeveloperCloud.Assistant.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.Assistant.v1
- path: '\src\IBM.WatsonDeveloperCloud.Conversation.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.Conversation.v1
- path: '\src\IBM.WatsonDeveloperCloud.LanguageTranslator.v2\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.LanguageTranslator.v2
- path: '\src\IBM.WatsonDeveloperCloud.LanguageTranslator.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.LanguageTranslator.v3
- path: '\src\IBM.WatsonDeveloperCloud.PersonalityInsights.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.PersonalityInsights.v3
- path: '\src\IBM.WatsonDeveloperCloud.SpeechToText.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.SpeechToText.v1
- path: '\src\IBM.WatsonDeveloperCloud.TextToSpeech.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.TextToSpeech.v1
- path: '\src\IBM.WatsonDeveloperCloud.ToneAnalyzer.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.ToneAnalyzer.v3
- path: '\src\IBM.WatsonDeveloperCloud.VisualRecognition.v3\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.VisualRecognition.v3
- path: '\src\IBM.WatsonDeveloperCloud.Discovery.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.Discovery.v1
- path: '\src\IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.NaturalLanguageUnderstanding.v1
- path: '\src\IBM.WatsonDeveloperCloud.NaturalLanguageClassifier.v1\bin\$(configuration)\*.nupkg'
  name: IBM.WatsonDeveloperCloud.NaturalLanguageClassifier.v1
deploy:
- provider: NuGet
  api_key:
    secure: jVMsvYb86JW+UMN2Gb2m1JazRkouGMzd58NHWxWVAY1BsQbehIU+YTxdsAeMo1qy
  on:
    branch: master
    APPVEYOR_REPO_TAG: true
